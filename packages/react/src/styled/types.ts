import { Style } from '@glitz/type';
import * as React from 'react';
import { StyledComponent, WithInnerRefProp } from './Super';

export type StyledFunction<TProps> = (style: Style) => StyledComponent<TProps>;

export interface StyledElementComponents {
  A: StyledComponent<WithInnerRefProp<React.AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>>;
  Abbr: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Address: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Area: StyledComponent<WithInnerRefProp<React.AreaHTMLAttributes<HTMLAreaElement>, HTMLAreaElement>>;
  Article: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Aside: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Audio: StyledComponent<WithInnerRefProp<React.AudioHTMLAttributes<HTMLAudioElement>, HTMLAudioElement>>;
  B: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Base: StyledComponent<WithInnerRefProp<React.BaseHTMLAttributes<HTMLBaseElement>, HTMLBaseElement>>;
  Bdi: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Bdo: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Big: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Blockquote: StyledComponent<WithInnerRefProp<React.BlockquoteHTMLAttributes<HTMLElement>, HTMLElement>>;
  Body: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLBodyElement>, HTMLBodyElement>>;
  Br: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLBRElement>, HTMLBRElement>>;
  Button: StyledComponent<WithInnerRefProp<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>>;
  Canvas: StyledComponent<WithInnerRefProp<React.CanvasHTMLAttributes<HTMLCanvasElement>, HTMLCanvasElement>>;
  Caption: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Cite: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Code: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Col: StyledComponent<WithInnerRefProp<React.ColHTMLAttributes<HTMLTableColElement>, HTMLTableColElement>>;
  Colgroup: StyledComponent<WithInnerRefProp<React.ColgroupHTMLAttributes<HTMLTableColElement>, HTMLTableColElement>>;
  Data: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Datalist: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLDataListElement>, HTMLDataListElement>>;
  Dd: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Del: StyledComponent<WithInnerRefProp<React.DelHTMLAttributes<HTMLElement>, HTMLElement>>;
  Details: StyledComponent<WithInnerRefProp<React.DetailsHTMLAttributes<HTMLElement>, HTMLElement>>;
  Dfn: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Dialog: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Div: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>>;
  Dl: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLDListElement>, HTMLDListElement>>;
  Dt: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Em: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Embed: StyledComponent<WithInnerRefProp<React.EmbedHTMLAttributes<HTMLEmbedElement>, HTMLEmbedElement>>;
  Fieldset: StyledComponent<WithInnerRefProp<React.FieldsetHTMLAttributes<HTMLFieldSetElement>, HTMLFieldSetElement>>;
  Figcaption: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Figure: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Footer: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Form: StyledComponent<WithInnerRefProp<React.FormHTMLAttributes<HTMLFormElement>, HTMLFormElement>>;
  H1: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>>;
  H2: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>>;
  H3: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>>;
  H4: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>>;
  H5: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>>;
  H6: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>>;
  Head: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Header: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Hgroup: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Hr: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLHRElement>, HTMLHRElement>>;
  Html: StyledComponent<WithInnerRefProp<React.HtmlHTMLAttributes<HTMLHtmlElement>, HTMLHtmlElement>>;
  I: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Iframe: StyledComponent<WithInnerRefProp<React.IframeHTMLAttributes<HTMLIFrameElement>, HTMLIFrameElement>>;
  Img: StyledComponent<WithInnerRefProp<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>>;
  Input: StyledComponent<WithInnerRefProp<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>>;
  Ins: StyledComponent<WithInnerRefProp<React.InsHTMLAttributes<HTMLModElement>, HTMLModElement>>;
  Kbd: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Keygen: StyledComponent<WithInnerRefProp<React.KeygenHTMLAttributes<HTMLElement>, HTMLElement>>;
  Label: StyledComponent<WithInnerRefProp<React.LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>>;
  Legend: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLLegendElement>, HTMLLegendElement>>;
  Li: StyledComponent<WithInnerRefProp<React.LiHTMLAttributes<HTMLLIElement>, HTMLLIElement>>;
  Link: StyledComponent<WithInnerRefProp<React.LinkHTMLAttributes<HTMLLinkElement>, HTMLLinkElement>>;
  Main: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Map: StyledComponent<WithInnerRefProp<React.MapHTMLAttributes<HTMLMapElement>, HTMLMapElement>>;
  Mark: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Menu: StyledComponent<WithInnerRefProp<React.MenuHTMLAttributes<HTMLElement>, HTMLElement>>;
  Menuitem: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Meta: StyledComponent<WithInnerRefProp<React.MetaHTMLAttributes<HTMLMetaElement>, HTMLMetaElement>>;
  Meter: StyledComponent<WithInnerRefProp<React.MeterHTMLAttributes<HTMLElement>, HTMLElement>>;
  Nav: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Noscript: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Object: StyledComponent<WithInnerRefProp<React.ObjectHTMLAttributes<HTMLObjectElement>, HTMLObjectElement>>;
  Ol: StyledComponent<WithInnerRefProp<React.OlHTMLAttributes<HTMLOListElement>, HTMLOListElement>>;
  Optgroup: StyledComponent<WithInnerRefProp<React.OptgroupHTMLAttributes<HTMLOptGroupElement>, HTMLOptGroupElement>>;
  Option: StyledComponent<WithInnerRefProp<React.OptionHTMLAttributes<HTMLOptionElement>, HTMLOptionElement>>;
  Output: StyledComponent<WithInnerRefProp<React.OutputHTMLAttributes<HTMLElement>, HTMLElement>>;
  P: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>>;
  Param: StyledComponent<WithInnerRefProp<React.ParamHTMLAttributes<HTMLParamElement>, HTMLParamElement>>;
  Picture: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Pre: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLPreElement>, HTMLPreElement>>;
  Progress: StyledComponent<WithInnerRefProp<React.ProgressHTMLAttributes<HTMLProgressElement>, HTMLProgressElement>>;
  Q: StyledComponent<WithInnerRefProp<React.QuoteHTMLAttributes<HTMLQuoteElement>, HTMLQuoteElement>>;
  Rp: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Rt: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Ruby: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  S: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Samp: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Script: StyledComponent<WithInnerRefProp<React.ScriptHTMLAttributes<HTMLScriptElement>, HTMLScriptElement>>;
  Section: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Select: StyledComponent<WithInnerRefProp<React.SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>>;
  Small: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Source: StyledComponent<WithInnerRefProp<React.SourceHTMLAttributes<HTMLSourceElement>, HTMLSourceElement>>;
  Span: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>>;
  Strong: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Style: StyledComponent<WithInnerRefProp<React.StyleHTMLAttributes<HTMLStyleElement>, HTMLStyleElement>>;
  Sub: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Summary: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Sup: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Table: StyledComponent<WithInnerRefProp<React.TableHTMLAttributes<HTMLTableElement>, HTMLTableElement>>;
  Tbody: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>>;
  Td: StyledComponent<WithInnerRefProp<React.TdHTMLAttributes<HTMLTableDataCellElement>, HTMLTableDataCellElement>>;
  Textarea: StyledComponent<WithInnerRefProp<React.TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>>;
  Tfoot: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>>;
  Th: StyledComponent<WithInnerRefProp<React.ThHTMLAttributes<HTMLTableHeaderCellElement>, HTMLTableHeaderCellElement>>;
  Thead: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>>;
  Time: StyledComponent<WithInnerRefProp<React.TimeHTMLAttributes<HTMLElement>, HTMLElement>>;
  Title: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLTitleElement>, HTMLTitleElement>>;
  Tr: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLTableRowElement>, HTMLTableRowElement>>;
  Track: StyledComponent<WithInnerRefProp<React.TrackHTMLAttributes<HTMLTrackElement>, HTMLTrackElement>>;
  U: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Ul: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLUListElement>, HTMLUListElement>>;
  Var: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Video: StyledComponent<WithInnerRefProp<React.VideoHTMLAttributes<HTMLVideoElement>, HTMLVideoElement>>;
  Wbr: StyledComponent<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  Svg: StyledComponent<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  Animate: StyledComponent<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  Circle: StyledComponent<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  Defs: StyledComponent<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  Ellipse: StyledComponent<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  G: StyledComponent<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  Image: StyledComponent<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  Line: StyledComponent<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  LinearGradient: StyledComponent<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  Mask: StyledComponent<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  Path: StyledComponent<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  Pattern: StyledComponent<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  Polygon: StyledComponent<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  Polyline: StyledComponent<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  RadialGradient: StyledComponent<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  Rect: StyledComponent<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  Stop: StyledComponent<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  Symbol: StyledComponent<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  Text: StyledComponent<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  Tspan: StyledComponent<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  Use: StyledComponent<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
}

export interface StyledElementFunctions {
  a: StyledFunction<WithInnerRefProp<React.AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>>;
  abbr: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  address: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  area: StyledFunction<WithInnerRefProp<React.AreaHTMLAttributes<HTMLAreaElement>, HTMLAreaElement>>;
  article: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  aside: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  audio: StyledFunction<WithInnerRefProp<React.AudioHTMLAttributes<HTMLAudioElement>, HTMLAudioElement>>;
  b: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  base: StyledFunction<WithInnerRefProp<React.BaseHTMLAttributes<HTMLBaseElement>, HTMLBaseElement>>;
  bdi: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  bdo: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  big: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  blockquote: StyledFunction<WithInnerRefProp<React.BlockquoteHTMLAttributes<HTMLElement>, HTMLElement>>;
  body: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLBodyElement>, HTMLBodyElement>>;
  br: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLBRElement>, HTMLBRElement>>;
  button: StyledFunction<WithInnerRefProp<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>>;
  canvas: StyledFunction<WithInnerRefProp<React.CanvasHTMLAttributes<HTMLCanvasElement>, HTMLCanvasElement>>;
  caption: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  cite: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  code: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  col: StyledFunction<WithInnerRefProp<React.ColHTMLAttributes<HTMLTableColElement>, HTMLTableColElement>>;
  colgroup: StyledFunction<WithInnerRefProp<React.ColgroupHTMLAttributes<HTMLTableColElement>, HTMLTableColElement>>;
  data: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  datalist: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLDataListElement>, HTMLDataListElement>>;
  dd: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  del: StyledFunction<WithInnerRefProp<React.DelHTMLAttributes<HTMLElement>, HTMLElement>>;
  details: StyledFunction<WithInnerRefProp<React.DetailsHTMLAttributes<HTMLElement>, HTMLElement>>;
  dfn: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  dialog: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  div: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>>;
  dl: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLDListElement>, HTMLDListElement>>;
  dt: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  em: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  embed: StyledFunction<WithInnerRefProp<React.EmbedHTMLAttributes<HTMLEmbedElement>, HTMLEmbedElement>>;
  fieldset: StyledFunction<WithInnerRefProp<React.FieldsetHTMLAttributes<HTMLFieldSetElement>, HTMLFieldSetElement>>;
  figcaption: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  figure: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  footer: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  form: StyledFunction<WithInnerRefProp<React.FormHTMLAttributes<HTMLFormElement>, HTMLFormElement>>;
  h1: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>>;
  h2: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>>;
  h3: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>>;
  h4: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>>;
  h5: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>>;
  h6: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>>;
  head: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  header: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  hgroup: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  hr: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLHRElement>, HTMLHRElement>>;
  html: StyledFunction<WithInnerRefProp<React.HtmlHTMLAttributes<HTMLHtmlElement>, HTMLHtmlElement>>;
  i: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  iframe: StyledFunction<WithInnerRefProp<React.IframeHTMLAttributes<HTMLIFrameElement>, HTMLIFrameElement>>;
  img: StyledFunction<WithInnerRefProp<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>>;
  input: StyledFunction<WithInnerRefProp<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>>;
  ins: StyledFunction<WithInnerRefProp<React.InsHTMLAttributes<HTMLModElement>, HTMLModElement>>;
  kbd: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  keygen: StyledFunction<WithInnerRefProp<React.KeygenHTMLAttributes<HTMLElement>, HTMLElement>>;
  label: StyledFunction<WithInnerRefProp<React.LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>>;
  legend: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLLegendElement>, HTMLLegendElement>>;
  li: StyledFunction<WithInnerRefProp<React.LiHTMLAttributes<HTMLLIElement>, HTMLLIElement>>;
  link: StyledFunction<WithInnerRefProp<React.LinkHTMLAttributes<HTMLLinkElement>, HTMLLinkElement>>;
  main: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  map: StyledFunction<WithInnerRefProp<React.MapHTMLAttributes<HTMLMapElement>, HTMLMapElement>>;
  mark: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  menu: StyledFunction<WithInnerRefProp<React.MenuHTMLAttributes<HTMLElement>, HTMLElement>>;
  menuitem: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  meta: StyledFunction<WithInnerRefProp<React.MetaHTMLAttributes<HTMLMetaElement>, HTMLMetaElement>>;
  meter: StyledFunction<WithInnerRefProp<React.MeterHTMLAttributes<HTMLElement>, HTMLElement>>;
  nav: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  noscript: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  object: StyledFunction<WithInnerRefProp<React.ObjectHTMLAttributes<HTMLObjectElement>, HTMLObjectElement>>;
  ol: StyledFunction<WithInnerRefProp<React.OlHTMLAttributes<HTMLOListElement>, HTMLOListElement>>;
  optgroup: StyledFunction<WithInnerRefProp<React.OptgroupHTMLAttributes<HTMLOptGroupElement>, HTMLOptGroupElement>>;
  option: StyledFunction<WithInnerRefProp<React.OptionHTMLAttributes<HTMLOptionElement>, HTMLOptionElement>>;
  output: StyledFunction<WithInnerRefProp<React.OutputHTMLAttributes<HTMLElement>, HTMLElement>>;
  p: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>>;
  param: StyledFunction<WithInnerRefProp<React.ParamHTMLAttributes<HTMLParamElement>, HTMLParamElement>>;
  picture: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  pre: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLPreElement>, HTMLPreElement>>;
  progress: StyledFunction<WithInnerRefProp<React.ProgressHTMLAttributes<HTMLProgressElement>, HTMLProgressElement>>;
  q: StyledFunction<WithInnerRefProp<React.QuoteHTMLAttributes<HTMLQuoteElement>, HTMLQuoteElement>>;
  rp: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  rt: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  ruby: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  s: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  samp: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  script: StyledFunction<WithInnerRefProp<React.ScriptHTMLAttributes<HTMLScriptElement>, HTMLScriptElement>>;
  section: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  select: StyledFunction<WithInnerRefProp<React.SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>>;
  small: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  source: StyledFunction<WithInnerRefProp<React.SourceHTMLAttributes<HTMLSourceElement>, HTMLSourceElement>>;
  span: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>>;
  strong: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  style: StyledFunction<WithInnerRefProp<React.StyleHTMLAttributes<HTMLStyleElement>, HTMLStyleElement>>;
  sub: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  summary: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  sup: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  table: StyledFunction<WithInnerRefProp<React.TableHTMLAttributes<HTMLTableElement>, HTMLTableElement>>;
  tbody: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>>;
  td: StyledFunction<WithInnerRefProp<React.TdHTMLAttributes<HTMLTableDataCellElement>, HTMLTableDataCellElement>>;
  textarea: StyledFunction<WithInnerRefProp<React.TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>>;
  tfoot: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>>;
  th: StyledFunction<WithInnerRefProp<React.ThHTMLAttributes<HTMLTableHeaderCellElement>, HTMLTableHeaderCellElement>>;
  thead: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>>;
  time: StyledFunction<WithInnerRefProp<React.TimeHTMLAttributes<HTMLElement>, HTMLElement>>;
  title: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLTitleElement>, HTMLTitleElement>>;
  tr: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLTableRowElement>, HTMLTableRowElement>>;
  track: StyledFunction<WithInnerRefProp<React.TrackHTMLAttributes<HTMLTrackElement>, HTMLTrackElement>>;
  u: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  ul: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLUListElement>, HTMLUListElement>>;
  var: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  video: StyledFunction<WithInnerRefProp<React.VideoHTMLAttributes<HTMLVideoElement>, HTMLVideoElement>>;
  wbr: StyledFunction<WithInnerRefProp<React.HTMLAttributes<HTMLElement>, HTMLElement>>;
  svg: StyledFunction<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  animate: StyledFunction<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  circle: StyledFunction<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  defs: StyledFunction<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  ellipse: StyledFunction<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  g: StyledFunction<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  image: StyledFunction<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  line: StyledFunction<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  linearGradient: StyledFunction<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  mask: StyledFunction<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  path: StyledFunction<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  pattern: StyledFunction<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  polygon: StyledFunction<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  polyline: StyledFunction<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  radialGradient: StyledFunction<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  rect: StyledFunction<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  stop: StyledFunction<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  symbol: StyledFunction<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  text: StyledFunction<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  tspan: StyledFunction<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
  use: StyledFunction<WithInnerRefProp<React.SVGAttributes<SVGElement>, SVGElement>>;
}
